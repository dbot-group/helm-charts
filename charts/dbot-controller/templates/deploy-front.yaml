{{ $global := .Values.dbot.global -}}
{{ $values := .Values.dbot.controller -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dbot-front
  labels:
    app: dbot-front
    project: dbot
  namespace: dbot
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
     matchLabels:
        app: dbot-front
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dbot-front
        project: dbot
    spec:
      containers:
        - name: dbot-front
          image: "{{ $global.image.repo }}/dbot-frontend/frontend:{{ $global.image.tag | default "demo" }}"
          imagePullPolicy: Always
          env:
            {{- toYaml $values.env | nindent 12 }}
          ports:
            - name: http
              containerPort: 80
          resources:
            {{- toYaml $values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /version.json
              port: http
            initialDelaySeconds: 15
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      imagePullSecrets:
        - name: registry-credentials
      serviceAccountName: dbot-front
      {{- with $values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
